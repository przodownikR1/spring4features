apply plugin: "groovy"
apply from: './properties.gradle'
dependencies {
    compile ("org.codehaus.groovy:groovy:${groovyVersion}")
    compile ("org.springframework:spring-core:${springVersion}")
    compile ("org.springframework:spring-beans:${springVersion}")
    compile ("org.springframework:spring-context:${springVersion}")
    compile ("org.springframework:spring-orm:${springVersion}")
    compile ("org.springframework:spring-tx:${springVersion}")
    compile ("org.springframework:spring-aop:${springVersion}")
       
    compile ("org.springframework:spring-aspects:${springVersion}")
    compile ("org.springframework:spring-webmvc:${springVersion}")
    
    compile ("org.springframework.data:spring-data-neo4j-rest:3.0.0.RELEASE")
   
    compile ("org.springframework.data:spring-data-neo4j:3.0.0.RELEASE")
    compile ("org.springframework.data:spring-data-jpa:${springDataJPAVersion}")
    compile ("org.springframework.hateoas:spring-hateoas:0.7.0.RELEASE")
    
    
    compile ("javax.validation:validation-api:${javaxValidationVersion}")
    compile ("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    compile ("org.hibernate:hibernate-core:${hibernateVersion}")
    compile ("org.hibernate:hibernate-entitymanager:${hibernateVersion}")

    compile ("com.sun.jersey:jersey-bundle:1.18")
    

    compile("org.codehaus.jackson:jackson-mapper-asl:${jacksonMapperVersion}")
    compile("org.codehaus.jackson:jackson-core-asl:${jacksonMapperVersion}")
    //compiler("joda-time:joda-time-hibernate:1.3")

    compile("org.projectlombok:lombok:${lombokVersion}")
    compile("com.google.guava:guava:${guavaVersion}")

    compile("com.jolbox:bonecp:${bonecpVersion}")
    compile("com.jolbox:bonecp-spring:${bonecpVersion}")
    compile("com.jolbox:bonecp-provider:${bonecpVersion}")

    compile("org.aspectj:aspectjrt:${aspectJVersion}")
    compile("org.aspectj:aspectjweaver:${aspectJVersion}")

    compile("org.slf4j:slf4j-api:$slf4jVersion")
    runtime("ch.qos.logback:logback-classic:$logbackVersion")
    compile("ch.qos.logback:logback-core:$logbackVersion")

    testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
    testCompile("org.mockito:mockito-all:$mockitoVersion")
   
    testCompile("junit:junit:$junitVersion")
    testCompile("org.easytesting:fest-assert:${festAssertVersion}")
    testCompile ("org.springframework:spring-test:${springVersion}")
   
}