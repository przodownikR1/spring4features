apply plugin: 'codenarc'
apply plugin: 'project-report'
apply plugin: 'pmd'
sourceSets {
  
    test {
        java { srcDir 'src/test/java' }
        groovy { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
    }
}

test {
    reports.html.destination = file ("$reports.html.destination/unit")
    testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
      showStandardStreams = false
    }
    
    minHeapSize = "128m"
    maxHeapSize = "512m"
  

/*
   beforeTest { descriptor ->
       logger.lifecycle("Running test: " + descriptor)
    }
    onOutput { descriptor, event ->
       logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
   }*/
 //test.addTestListener(new TestListenerImpl())
    }


/* class TestListenerImpl implements TestListener {
 void beforeSuite(TestDescriptor suite) { println "START [$suite] [$suite.name]" }
 void afterSuite(TestDescriptor suite, TestResult result) { println "FINISH [$suite] [$suite.name]" }
 void beforeTest(TestDescriptor test) { println "START [$test] [$test.name]" }
 void afterTest(TestDescriptor test, TestResult result) { println "FINISH [$test] [$test.name] [$result.exception]" }
 }*/